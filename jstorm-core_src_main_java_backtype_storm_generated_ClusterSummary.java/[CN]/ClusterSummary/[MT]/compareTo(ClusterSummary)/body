{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(is_set_nimbus()).compareTo(other.is_set_nimbus());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_nimbus()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.nimbus,other.nimbus);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_supervisors()).compareTo(other.is_set_supervisors());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_supervisors()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.supervisors,other.supervisors);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_topologies()).compareTo(other.is_set_topologies());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_topologies()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.topologies,other.topologies);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
