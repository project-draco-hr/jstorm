def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('registerMetrics_args')
    if (self.topologyId is not None):
        oprot.writeFieldBegin('topologyId', TType.STRING, 1)
        oprot.writeString(self.topologyId.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.metrics is not None):
        oprot.writeFieldBegin('metrics', TType.SET, 2)
        oprot.writeSetBegin(TType.STRING, len(self.metrics))
        for iter212 in self.metrics:
            oprot.writeString(iter212.encode('utf-8'))
        oprot.writeSetEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
