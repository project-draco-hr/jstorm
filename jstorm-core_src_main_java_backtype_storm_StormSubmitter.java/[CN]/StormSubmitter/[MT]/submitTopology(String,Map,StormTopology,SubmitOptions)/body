{
  if (!Utils.isValidConf(stormConf)) {
    throw new IllegalArgumentException("Storm conf is not valid. Must be json-serializable");
  }
  stormConf=new HashMap(stormConf);
  stormConf.putAll(Utils.readCommandLineOpts());
  Map conf=Utils.readStormConfig();
  conf.putAll(stormConf);
  putUserInfo(conf,stormConf);
  try {
    String serConf=Utils.to_json(stormConf);
    if (localNimbus != null) {
      LOG.info("Submitting topology " + name + " in local mode");
      localNimbus.submitTopology(name,null,serConf,topology);
    }
 else {
      NimbusClient client=NimbusClient.getConfiguredClient(conf);
      try {
        if (topologyNameExists(client,conf,name)) {
          throw new RuntimeException("Topology with name `" + name + "` already exists on cluster");
        }
        submitJar(client,conf);
        LOG.info("Submitting topology " + name + " in distributed mode with conf "+ serConf);
        if (opts != null) {
          client.getClient().submitTopologyWithOpts(name,path,serConf,topology,opts);
        }
 else {
          client.getClient().submitTopology(name,path,serConf,topology);
        }
      }
  finally {
        client.close();
      }
    }
    LOG.info("Finished submitting topology: " + name);
  }
 catch (  InvalidTopologyException e) {
    LOG.warn("Topology submission exception",e);
    throw e;
  }
catch (  AlreadyAliveException e) {
    LOG.warn("Topology already alive exception",e);
    throw e;
  }
catch (  TopologyAssignException e) {
    LOG.warn("Failed to assign " + e.get_msg(),e);
    throw new RuntimeException(e);
  }
catch (  TException e) {
    LOG.warn("Failed to assign ",e);
    throw new RuntimeException(e);
  }
}
