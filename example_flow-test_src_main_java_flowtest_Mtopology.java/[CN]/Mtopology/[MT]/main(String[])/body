{
  Properties prop=null;
  try {
    prop=readConf(args[0]);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (prop == null)   return;
  TopologyBuilder builder=new TopologyBuilder();
  builder.setSpout("Mspout",new Mspout());
  IBasicBolt bolt=new IBasicBolt(){
    @Override public void declareOutputFields(    OutputFieldsDeclarer declarer){
    }
    @Override public Map<String,Object> getComponentConfiguration(){
      return null;
    }
    @Override public void prepare(    Map stormConf,    TopologyContext context){
    }
    @Override public void execute(    Tuple input,    BasicOutputCollector collector){
    }
    @Override public void cleanup(){
    }
  }
;
  InputDeclarer inputDeclarer=builder.setBolt("Mbolt",bolt,Integer.parseInt(prop.getProperty("parallelism_hint","80")));
  inputDeclarer.directGrouping("Mspout");
  Config conf=new Config();
  conf.setNumWorkers(Integer.parseInt(prop.getProperty("numWorkers","82")));
  conf.setNumAckers(1);
  StormSubmitter.submitTopology(prop.getProperty("topologyname","Mtopology"),conf,builder.createTopology());
}
