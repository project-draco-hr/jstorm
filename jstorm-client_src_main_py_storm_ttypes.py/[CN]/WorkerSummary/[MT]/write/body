def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('WorkerSummary')
    if (self.port is not None):
        oprot.writeFieldBegin('port', TType.I32, 1)
        oprot.writeI32(self.port)
        oprot.writeFieldEnd()
    if (self.topology is not None):
        oprot.writeFieldBegin('topology', TType.STRING, 2)
        oprot.writeString(self.topology.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.tasks is not None):
        oprot.writeFieldBegin('tasks', TType.LIST, 3)
        oprot.writeListBegin(TType.STRUCT, len(self.tasks))
        for iter345 in self.tasks:
            iter345.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
