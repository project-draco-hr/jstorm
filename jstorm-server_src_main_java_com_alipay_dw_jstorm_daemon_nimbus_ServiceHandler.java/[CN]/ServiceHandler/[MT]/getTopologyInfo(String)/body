{
  TopologyInfo topologyInfo=null;
  StormClusterState stormClusterState=data.getStormClusterState();
  try {
    StormBase base=stormClusterState.storm_base(topologyId,null);
    if (base == null) {
      throw new TException("Failed to get StormBase from ZK of " + topologyId);
    }
    Assignment assignment=stormClusterState.assignment_info(topologyId,null);
    if (assignment == null) {
      throw new TException("Failed to get StormBase from ZK of " + topologyId);
    }
    Map<Integer,NodePort> taskToNodePort=assignment.getTaskToNodeport();
    if (taskToNodePort == null) {
      throw new TException("No taskToNodeport of " + topologyId);
    }
    List<TaskSummary> taskSummarys=new ArrayList<TaskSummary>();
    HashMap<Integer,String> taskInfo=Cluster.topology_task_info(stormClusterState,topologyId);
    for (    Entry<Integer,String> entry : taskInfo.entrySet()) {
      Integer taskId=entry.getKey();
      String componentId=entry.getValue();
      NodePort np=taskToNodePort.get(taskId);
      if (np == null) {
        LOG.warn("Topology " + topologyId + " task "+ taskId+ " no NodePort");
        continue;
      }
      TaskHeartbeat heartbeat=stormClusterState.task_heartbeat(topologyId,taskId);
      if (heartbeat == null) {
        LOG.warn("Topology " + topologyId + " task "+ taskId+ " no heartbeat");
        continue;
      }
      String host=(String)assignment.getNodeHost().get(np.getNode());
      List<TaskError> errors=stormClusterState.task_errors(topologyId,taskId);
      List<ErrorInfo> newErrors=new ArrayList<ErrorInfo>();
      if (errors != null) {
        int size=errors.size();
        for (int i=0; i < size; i++) {
          TaskError e=(TaskError)errors.get(i);
          newErrors.add(new ErrorInfo(e.getError(),e.getTimSecs()));
        }
      }
      int uptimeSecs=heartbeat.getUptimeSecs();
      TaskSummary taskSummary=new TaskSummary(taskId,componentId,host,np.getPort(),uptimeSecs,newErrors);
      CommonStatsData status=(CommonStatsData)heartbeat.getStats();
      TaskStats tkStatus=status.getTaskStats();
      taskSummary.set_stats(tkStatus);
      taskSummarys.add(taskSummary);
    }
    topologyInfo=new TopologyInfo(topologyId,base.getStormName(),TimeUtils.time_delta(base.getLanchTimeSecs()),taskSummarys,extractStatusStr(base));
  }
 catch (  TException e) {
    LOG.info("Failed to get topologyInfo" + topologyId,e);
    throw e;
  }
catch (  Exception e) {
    LOG.info("Failed to get topologyInfo" + topologyId,e);
    throw new TException("Failed to get topologyInfo" + topologyId);
  }
  return topologyInfo;
}
