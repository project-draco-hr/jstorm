{
  List<TaskError> errors=new ArrayList<TaskError>();
  String path=Cluster.taskerror_path(topologyId,taskId);
  if (cluster_state.node_existed(path,false) == false) {
    return errors;
  }
  List<String> children=cluster_state.get_children(path,false);
  for (  String str : children) {
    Object obj=getObject(path + Cluster.ZK_SEPERATOR + str,false);
    if (obj != null) {
      TaskError error=(TaskError)obj;
      errors.add(error);
    }
  }
  Collections.sort(errors,new Comparator<TaskError>(){
    @Override public int compare(    TaskError o1,    TaskError o2){
      if (o1.getTimSecs() > o2.getTimSecs()) {
        return 1;
      }
      if (o1.getTimSecs() < o2.getTimSecs()) {
        return -1;
      }
      return 0;
    }
  }
);
  return errors;
}
