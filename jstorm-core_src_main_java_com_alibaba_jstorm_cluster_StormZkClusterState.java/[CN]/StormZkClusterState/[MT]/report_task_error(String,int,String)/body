{
  boolean found=false;
  String path=Cluster.taskerror_path(topologyId,taskId);
  cluster_state.mkdirs(path);
  List<Integer> children=new ArrayList<Integer>();
  String timeStamp=String.valueOf(TimeUtils.current_time_secs());
  String timestampPath=path + Cluster.ZK_SEPERATOR + timeStamp;
  for (  String str : cluster_state.get_children(path,false)) {
    String errorPath=path + "/" + str;
    String errorInfo=getString(errorPath,false);
    if (StringUtils.isBlank(errorInfo)) {
      deleteObject(errorPath);
      continue;
    }
    if (errorInfo.equals(error)) {
      deleteObject(errorPath);
      setObject(timestampPath,error);
      found=true;
      break;
    }
    children.add(Integer.parseInt(str));
  }
  if (found == false) {
    Collections.sort(children);
    while (children.size() >= 3) {
      deleteObject(path + Cluster.ZK_SEPERATOR + children.remove(0));
    }
    setObject(timestampPath,error);
  }
  setLastErrInfo(topologyId,error,timeStamp);
}
