{
  super(workerData);
  List<Integer> localOutTasks=new ArrayList<Integer>();
  allTargetTasks.addAll(allOutTasks);
  for (  Integer outTask : allOutTasks) {
    if (workerTasks.contains(outTask)) {
      localOutTasks.add(outTask);
    }
  }
  this.workerData=workerData;
  intervalCheck=new IntervalCheck();
  intervalCheck.setInterval(60);
  if (localOutTasks.size() != 0) {
    this.outTasks=localOutTasks;
    isLocal=true;
  }
 else {
    this.outTasks=new ArrayList<Integer>();
    this.outTasks.addAll(allOutTasks);
    refreshLocalNodeTasks();
    isLocal=false;
  }
  randomrange=new RandomRange(outTasks.size());
}
