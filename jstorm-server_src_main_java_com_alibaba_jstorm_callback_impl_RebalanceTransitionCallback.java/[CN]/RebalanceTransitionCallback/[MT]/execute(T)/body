{
  Integer delaySecs=KillTransitionCallback.DEFAULT_DELAY_SECONDS;
  if (args == null || args.length == 0 || args[0] == null) {
    Map<?,?> map=null;
    try {
      map=StormConfig.read_nimbus_topology_conf(data.getConf(),topologyid);
      delaySecs=JStormUtils.parseInt(map.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS));
      if (delaySecs != null) {
        delaySecs=delaySecs * 2;
      }
 else {
        LOG.info("Fail to get TOPOLOGY_MESSAGE_TIMEOUT_SECS " + map);
      }
    }
 catch (    Exception e) {
      LOG.info("Failed to get topology configuration " + topologyid);
    }
  }
 else {
    delaySecs=Integer.valueOf(String.valueOf(args[0]));
  }
  if (delaySecs == null || delaySecs <= 0) {
    delaySecs=KillTransitionCallback.DEFAULT_DELAY_SECONDS;
  }
  LOG.info("Delaying event " + StatusType.do_rebalance.getStatus() + " for "+ delaySecs+ " secs for "+ topologyid);
  data.getScheduExec().schedule(new DelayEventRunnable(data,topologyid,StatusType.do_rebalance),delaySecs,TimeUnit.SECONDS);
  return new StormStatus(delaySecs,StatusType.rebalancing,oldStatus);
}
