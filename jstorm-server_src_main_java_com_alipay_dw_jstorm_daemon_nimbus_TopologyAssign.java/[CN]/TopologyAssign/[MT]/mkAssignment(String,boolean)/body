{
  LOG.info("Determining assignment for " + topologyId);
  Map<Object,Object> conf=nimbusData.getConf();
  StormClusterState stormClusterState=nimbusData.getStormClusterState();
  RunnableCallback callback=null;
  Map<String,SupervisorInfo> supervisorMap=Cluster.allSupervisorInfo(stormClusterState,callback);
  if (supervisorMap.size() == 0) {
    throw new IOException("Failed to make assignment " + topologyId + ", due to no alive supervisor");
  }
  Assignment existingAssignment=stormClusterState.assignment_info(topologyId,null);
  Map<Integer,NodePort> taskNodePort=assignTasks(topologyId,existingAssignment,stormClusterState,callback,supervisorMap,isScratch);
  Map<String,String> nodeHost=getTopologyNodeHost(supervisorMap,existingAssignment,taskNodePort);
  Map<Integer,Integer> startTimes=getTaskStartTimes(existingAssignment,taskNodePort);
  String codeDir=StormConfig.masterStormdistRoot(conf,topologyId);
  Assignment assignment=new Assignment(codeDir,taskNodePort,nodeHost,startTimes);
  stormClusterState.set_assignment(topologyId,assignment);
  NimbusUtils.updateTaskHbStartTime(nimbusData,assignment,topologyId);
  LOG.info("Successfully make assignment for topology id " + topologyId + ": "+ assignment);
  return assignment;
}
