def __init__(self, handler):
    self._handler = handler
    self._processMap = {}
    self._processMap['submitTopology'] = Processor.process_submitTopology
    self._processMap['submitTopologyWithOpts'] = Processor.process_submitTopologyWithOpts
    self._processMap['killTopology'] = Processor.process_killTopology
    self._processMap['killTopologyWithOpts'] = Processor.process_killTopologyWithOpts
    self._processMap['activate'] = Processor.process_activate
    self._processMap['deactivate'] = Processor.process_deactivate
    self._processMap['rebalance'] = Processor.process_rebalance
    self._processMap['metricMonitor'] = Processor.process_metricMonitor
    self._processMap['beginLibUpload'] = Processor.process_beginLibUpload
    self._processMap['beginFileUpload'] = Processor.process_beginFileUpload
    self._processMap['uploadChunk'] = Processor.process_uploadChunk
    self._processMap['finishFileUpload'] = Processor.process_finishFileUpload
    self._processMap['beginFileDownload'] = Processor.process_beginFileDownload
    self._processMap['downloadChunk'] = Processor.process_downloadChunk
    self._processMap['getNimbusConf'] = Processor.process_getNimbusConf
    self._processMap['getClusterInfo'] = Processor.process_getClusterInfo
    self._processMap['getTopologyInfo'] = Processor.process_getTopologyInfo
    self._processMap['getSupervisorWorkers'] = Processor.process_getSupervisorWorkers
    self._processMap['getTopologyConf'] = Processor.process_getTopologyConf
    self._processMap['getTopology'] = Processor.process_getTopology
    self._processMap['getUserTopology'] = Processor.process_getUserTopology
    self._processMap['getTopologyMetric'] = Processor.process_getTopologyMetric
