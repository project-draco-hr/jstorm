{
  boolean allowed=check_nimbus_priority();
  if (allowed) {
    RunnableCallback masterCallback=new RunnableCallback(){
      @Override public void run(){
        try {
          tryToBeLeader(conf);
        }
 catch (        Exception e) {
          LOG.error("To be master error",e);
          JStormUtils.halt_process(30,"Cant't to be master" + e.getMessage());
        }
      }
    }
;
    LOG.info("This nimbus can be  leader");
    data.getStormClusterState().try_to_be_leader(Cluster.MASTER_SUBTREE,hostPort,masterCallback);
  }
 else {
    LOG.info("This nimbus can't be leader");
  }
}
