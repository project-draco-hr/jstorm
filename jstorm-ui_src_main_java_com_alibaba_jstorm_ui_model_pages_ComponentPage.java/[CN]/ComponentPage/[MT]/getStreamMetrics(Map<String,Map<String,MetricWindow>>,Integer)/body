{
  TableData table=new TableData();
  List<String> headers=table.getHeaders();
  List<Map<String,ColumnData>> lines=table.getLines();
  headers.add(UIDef.HEADER_STREAM_ID);
  headers.addAll(UIUtils.getSortedKeys(streamMetric.keySet()));
  Map<String,Map<String,ColumnData>> lineMap=new HashMap<String,Map<String,ColumnData>>();
  for (  Entry<String,Map<String,MetricWindow>> entry : streamMetric.entrySet()) {
    String metricName=entry.getKey();
    Map<String,MetricWindow> streamMetricWindow=entry.getValue();
    for (    Entry<String,MetricWindow> streamEntry : streamMetricWindow.entrySet()) {
      String streamId=streamEntry.getKey();
      MetricWindow metric=streamEntry.getValue();
      Map<String,ColumnData> line=lineMap.get(streamId);
      if (line == null) {
        line=new HashMap<String,ColumnData>();
        lineMap.put(streamId,line);
      }
      String value=String.valueOf(metric.get_metricWindow().get(window));
      ColumnData columnData=new ColumnData();
      columnData.addText(value);
      line.put(metricName,columnData);
    }
  }
  for (  Entry<String,Map<String,ColumnData>> entry : lineMap.entrySet()) {
    String streamId=entry.getKey();
    Map<String,ColumnData> line=entry.getValue();
    lines.add(line);
    ColumnData columnData=new ColumnData();
    columnData.addText(streamId);
    line.put(UIDef.HEADER_STREAM_ID,columnData);
  }
  UIUtils.complementingTable(table);
  return table;
}
