{
  TableData table=new TableData();
  List<String> headers=table.getHeaders();
  List<Map<String,ColumnData>> lines=table.getLines();
  Map<Integer,MetricInfo> allTaskMetrics=topologyInfo.get_metrics().get_taskMetric();
  Map<Integer,MetricInfo> taskMetrics=new TreeMap<Integer,MetricInfo>();
  for (  TaskSummary taskSummary : showTasks) {
    Integer taskId=taskSummary.get_task_id();
    MetricInfo metric=allTaskMetrics.get(taskId);
    if (metric == null) {
      LOG.error("No task metric of " + taskId);
      continue;
    }
    taskMetrics.put(taskId,metric);
  }
  headers.add(UIDef.HEADER_TASK_ID);
  List<String> keys=UIUtils.getSortedKeys(UIUtils.getKeys(taskMetrics.values()));
  headers.addAll(keys);
  for (  Entry<Integer,MetricInfo> entry : taskMetrics.entrySet()) {
    Integer taskId=entry.getKey();
    MetricInfo metric=entry.getValue();
    Map<String,ColumnData> line=UIUtils.getMetricLine(metric,headers,window);
    ColumnData taskIdColumn=new ColumnData();
    taskIdColumn.addText(String.valueOf(taskId));
    line.put(UIDef.HEADER_TASK_ID,taskIdColumn);
    lines.add(line);
  }
  return table;
}
