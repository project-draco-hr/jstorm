{
  boolean ret=false;
  if (msg.size() == 0)   return false;
  StringBuilder sb=new StringBuilder();
  sb.append("{");
  sb.append("\'").append(MSG).append("\'");
  sb.append(':');
  sb.append("{");
  for (  Entry<String,Object> entry : msg.entrySet()) {
    sb.append("\'").append(entry.getKey()).append("\'");
    sb.append(":");
    if (entry.getValue() instanceof String)     sb.append("\"").append(entry.getValue()).append("\"");
 else     sb.append(entry.getValue());
    sb.append(",");
  }
  if (msg.size() > 0)   sb.deleteCharAt(sb.length() - 1);
  sb.append("}");
  sb.append(',');
  sb.append("\'").append(COLLECTION_FLAG).append("\'");
  sb.append(':');
  sb.append(collection_flag);
  sb.append(',');
  sb.append("\'").append(ERROR_INFO).append("\'");
  sb.append(':').append("\'").append(error_message).append("\'");
  sb.append("}");
  String kvMsg=sb.toString();
  LOG.debug(kvMsg);
  if (post == true) {
    String url=buildURL();
    ret=httpPost(url,kvMsg);
  }
 else {
    String request=buildRqstAddr();
    StringBuilder postAddr=new StringBuilder();
    postAddr.append(request);
    postAddr.append(URLEncoder.encode(kvMsg));
    ret=httpGet(postAddr);
  }
  return ret;
}
