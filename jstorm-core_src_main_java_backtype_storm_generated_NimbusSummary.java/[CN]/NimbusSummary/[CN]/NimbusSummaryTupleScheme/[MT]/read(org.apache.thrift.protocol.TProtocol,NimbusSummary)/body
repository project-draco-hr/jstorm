{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.nimbusMaster=new NimbusStat();
  struct.nimbusMaster.read(iprot);
  struct.set_nimbusMaster_isSet(true);
{
    org.apache.thrift.protocol.TList _list79=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.nimbusSlaves=new ArrayList<NimbusStat>(_list79.size);
    NimbusStat _elem80;
    for (int _i81=0; _i81 < _list79.size; ++_i81) {
      _elem80=new NimbusStat();
      _elem80.read(iprot);
      struct.nimbusSlaves.add(_elem80);
    }
  }
  struct.set_nimbusSlaves_isSet(true);
  struct.supervisorNum=iprot.readI32();
  struct.set_supervisorNum_isSet(true);
  struct.totalPortNum=iprot.readI32();
  struct.set_totalPortNum_isSet(true);
  struct.usedPortNum=iprot.readI32();
  struct.set_usedPortNum_isSet(true);
  struct.freePortNum=iprot.readI32();
  struct.set_freePortNum_isSet(true);
  struct.version=iprot.readString();
  struct.set_version_isSet(true);
}
