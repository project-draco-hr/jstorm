{
  Integer settingNum=JStormUtils.parseInt(stormConf.get(Config.TOPOLOGY_WORKERS));
  int ret=0, hintSum=0, tmCount=0;
  Map<String,Object> components=ThriftTopologyUtils.getComponents(sysTopology);
  for (  Entry<String,Object> entry : components.entrySet()) {
    String componentName=entry.getKey();
    Object component=entry.getValue();
    ComponentCommon common=null;
    if (component instanceof Bolt) {
      common=((Bolt)component).get_common();
    }
    if (component instanceof SpoutSpec) {
      common=((SpoutSpec)component).get_common();
    }
    if (component instanceof StateSpoutSpec) {
      common=((StateSpoutSpec)component).get_common();
    }
    int hint=common.get_parallelism_hint();
    if (componentName.equals(Common.TOPOLOGY_MASTER_COMPONENT_ID)) {
      tmCount+=hint;
      continue;
    }
    hintSum+=hint;
  }
  if (settingNum == null) {
    ret=hintSum;
  }
 else {
    ret=Math.min(settingNum,hintSum);
  }
  Boolean isTmSingleWorker=ConfigExtension.getTopologyMasterSingleWorker(stormConf);
  if (isTmSingleWorker != null) {
    if (isTmSingleWorker == true) {
      ret+=tmCount;
      setAssignSingleWorkerForTM(true);
    }
  }
 else {
    if (ret >= 10) {
      ret+=tmCount;
      setAssignSingleWorkerForTM(true);
    }
  }
  return ret;
}
