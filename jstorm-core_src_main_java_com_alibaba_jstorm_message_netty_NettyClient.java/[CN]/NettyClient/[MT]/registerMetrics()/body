{
  sendTimer=JStormMetrics.registerWorkerHistogram(MetricDef.NETTY_CLI_SEND_TIME,nettyConnection.toString());
  batchSizeHistogram=JStormMetrics.registerWorkerHistogram(MetricDef.NETTY_CLI_BATCH_SIZE,nettyConnection.toString());
  sendSpeed=JStormMetrics.registerWorkerMeter(MetricDef.NETTY_CLI_SEND_SPEED,nettyConnection.toString());
  CacheGaugeHealthCheck cacheGauge=new CacheGaugeHealthCheck(messageBatchRef,MetricDef.NETTY_CLI_CACHE_SIZE + ":" + nettyConnection.toString());
  JStormMetrics.registerWorkerGauge(cacheGauge,MetricDef.NETTY_CLI_CACHE_SIZE,nettyConnection.toString());
  JStormHealthCheck.registerWorkerHealthCheck(MetricDef.NETTY_CLI_CACHE_SIZE + ":" + nettyConnection.toString(),cacheGauge);
  JStormMetrics.registerWorkerGauge(new com.codahale.metrics.Gauge<Double>(){
    @Override public Double getValue(){
      return ((Long)pendings.get()).doubleValue();
    }
  }
,MetricDef.NETTY_CLI_SEND_PENDING,nettyConnection.toString());
  JStormHealthCheck.registerWorkerHealthCheck(MetricDef.NETTY_CLI_CONNECTION + ":" + nettyConnection.toString(),new HealthCheck(){
    HealthCheck.Result healthy=HealthCheck.Result.healthy();
    HealthCheck.Result unhealthy=HealthCheck.Result.unhealthy("NettyConnection " + nettyConnection.toString() + " is broken.");
    @Override protected Result check() throws Exception {
      if (isChannelReady() == null) {
        return unhealthy;
      }
 else {
        return healthy;
      }
    }
  }
);
}
