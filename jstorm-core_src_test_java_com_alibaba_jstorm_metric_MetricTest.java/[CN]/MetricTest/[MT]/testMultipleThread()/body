{
  LOG.info("Begin to test");
  int[] timeWindow={0,windows[0]};
  for (int i=0; i < timeWindow.length; i++) {
    for (int j=0; j < timeWindow.length; j++) {
      for (int l=0; l < timeWindow.length; l++) {
        final Input input=new Input();
        input.metric=getJStormMetric(1,String.valueOf(i) + ":" + String.valueOf(j)+ ":"+ String.valueOf(l));
        input.firstRunSeconds=timeWindow[i];
        input.interruptSeconds=timeWindow[j];
        input.endRunSeconds=timeWindow[l];
        Thread thread=new Thread(new Runnable(){
          @Override public void run(){
            testUpdates(input);
          }
        }
);
        thread.start();
      }
    }
  }
  for (int i=0; i < 4 * windows[0] / 60; i++) {
    MetricInfo metricInfo=computWorkerMetrics(JStormMetrics.workerMetrics);
    JStormUtils.sleepMs(60 * 1000);
  }
  JStormUtils.haltProcess(0);
}
