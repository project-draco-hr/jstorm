{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.topologyId != null) {
    oprot.writeFieldBegin(TOPOLOGY_ID_FIELD_DESC);
    oprot.writeString(struct.topologyId);
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(TOPOLOGY_MASTER_ID_FIELD_DESC);
  oprot.writeI32(struct.topologyMasterId);
  oprot.writeFieldEnd();
  if (struct.taskHbs != null) {
    if (struct.is_set_taskHbs()) {
      oprot.writeFieldBegin(TASK_HBS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.STRUCT,struct.taskHbs.size()));
        for (        Map.Entry<Integer,TaskHeartbeat> _iter226 : struct.taskHbs.entrySet()) {
          oprot.writeI32(_iter226.getKey());
          _iter226.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
