{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.STRING) {
        this.id=iprot.readString();
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.STRING) {
    this.name=iprot.readString();
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.I32) {
this.uptime_secs=iprot.readI32();
set_uptime_secs_isSet(true);
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift7.protocol.TType.LIST) {
{
org.apache.thrift7.protocol.TList _list193=iprot.readListBegin();
this.workers=new ArrayList<WorkerSummary>(_list193.size);
for (int _i194=0; _i194 < _list193.size; ++_i194) {
WorkerSummary _elem195;
_elem195=new WorkerSummary();
_elem195.read(iprot);
this.workers.add(_elem195);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift7.protocol.TType.STRING) {
this.status=iprot.readString();
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 6:
if (field.type == org.apache.thrift7.protocol.TType.LIST) {
{
org.apache.thrift7.protocol.TList _list196=iprot.readListBegin();
this.tasks=new ArrayList<TaskSummary>(_list196.size);
for (int _i197=0; _i197 < _list196.size; ++_i197) {
TaskSummary _elem198;
_elem198=new TaskSummary();
_elem198.read(iprot);
this.tasks.add(_elem198);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
