{
  Map<Integer,Integer> startTimes=new TreeMap<Integer,Integer>();
  if (context.getAssignType() == TopologyAssignContext.ASSIGN_TYPE_NEW) {
    int nowSecs=TimeUtils.current_time_secs();
    for (    Integer changedTaskId : taskWorkerSlot.keySet()) {
      startTimes.put(changedTaskId,nowSecs);
    }
    return startTimes;
  }
  Map<Integer,ResourceAssignment> oldTaskToWorkerSlot=new HashMap<Integer,ResourceAssignment>();
  if (existingAssignment != null) {
    Map<Integer,Integer> taskStartTimeSecs=existingAssignment.getTaskStartTimeSecs();
    if (taskStartTimeSecs != null) {
      startTimes.putAll(taskStartTimeSecs);
    }
    if (existingAssignment.getTaskToResource() != null) {
      oldTaskToWorkerSlot=existingAssignment.getTaskToResource();
    }
  }
  StormClusterState zkClusterState=nimbusData.getStormClusterState();
  Set<Integer> changeTaskIds=getChangeTaskIds(oldTaskToWorkerSlot,taskWorkerSlot);
  int nowSecs=TimeUtils.current_time_secs();
  for (  Integer changedTaskId : changeTaskIds) {
    startTimes.put(changedTaskId,nowSecs);
    zkClusterState.remove_task_heartbeat(topologyId,changedTaskId);
  }
  LOG.info("Task assignment has been changed " + changeTaskIds);
  return startTimes;
}
