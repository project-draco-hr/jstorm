{
  TopologyAssignContext ret=new TopologyAssignContext();
  String topologyId=event.getTopologyId();
  Map<Object,Object> nimbusConf=nimbusData.getConf();
  Map<Object,Object> topologyConf=StormConfig.read_nimbus_topology_conf(nimbusConf,topologyId);
  StormTopology rawTopology=StormConfig.read_nimbus_topology_code(nimbusConf,topologyId);
  ret.setRawTopology(rawTopology);
  Map stormConf=new HashMap();
  stormConf.putAll(nimbusConf);
  stormConf.putAll(topologyConf);
  ret.setStormConf(stormConf);
  StormClusterState stormClusterState=nimbusData.getStormClusterState();
  Map<String,SupervisorInfo> supInfos=Cluster.allSupervisorInfo(stormClusterState,null);
  if (supInfos.size() == 0) {
    throw new FailedAssignTopologyException("Failed to make assignment " + topologyId + ", due to no alive supervisor");
  }
  Map<Integer,String> taskToComponent=Cluster.topology_task_info(stormClusterState,topologyId);
  ret.setTaskToComponent(taskToComponent);
  Set<Integer> allTaskIds=taskToComponent.keySet();
  if (allTaskIds == null || allTaskIds.size() == 0) {
    String errMsg="Failed to get all task ID list from /ZK-dir/tasks/" + topologyId;
    LOG.warn(errMsg);
    throw new IOException(errMsg);
  }
  ret.setAllTaskIds(allTaskIds);
  Set<Integer> aliveTasks=new HashSet<Integer>();
  Set<Integer> unstoppedTasks=new HashSet<Integer>();
  Set<Integer> deadTasks=new HashSet<Integer>();
  Assignment existingAssignment=stormClusterState.assignment_info(topologyId,null);
  if (existingAssignment != null) {
    aliveTasks=getAliveTasks(topologyId,allTaskIds);
    unstoppedTasks=getUnstoppedSlots(aliveTasks,supInfos,existingAssignment);
    deadTasks.addAll(allTaskIds);
    deadTasks.removeAll(aliveTasks);
  }
  ret.setDeadTaskIds(deadTasks);
  ret.setUnstoppedTaskIds(unstoppedTasks);
  getFreeSlots(supInfos,stormClusterState);
  ret.setCluster(supInfos);
  if (existingAssignment == null) {
    ret.setAssignType(TopologyAssignContext.ASSIGN_TYPE_NEW);
    try {
      AssignmentBak lastAssignment=stormClusterState.assignment_bak(event.getTopologyName());
      if (lastAssignment != null) {
        ret.setOldAssignment(lastAssignment.getAssignment());
      }
    }
 catch (    Exception e) {
      LOG.warn("Fail to get old assignment",e);
    }
  }
 else {
    ret.setOldAssignment(existingAssignment);
    if (event.isScratch()) {
      ret.setAssignType(TopologyAssignContext.ASSIGN_TYPE_REBALANCE);
    }
 else {
      ret.setAssignType(TopologyAssignContext.ASSIGN_TYPE_MONITOR);
    }
  }
  return ret;
}
