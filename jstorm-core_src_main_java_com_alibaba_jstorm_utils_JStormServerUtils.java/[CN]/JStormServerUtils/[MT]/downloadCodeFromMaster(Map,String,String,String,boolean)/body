{
  FileUtils.forceMkdir(new File(localRoot));
  FileUtils.forceMkdir(new File(StormConfig.stormlib_path(localRoot)));
  String localStormjarPath=StormConfig.stormjar_path(localRoot);
  String masterStormjarPath=StormConfig.stormjar_path(masterCodeDir);
  Utils.downloadFromMaster(conf,masterStormjarPath,localStormjarPath);
  String localStormcodePath=StormConfig.stormcode_path(localRoot);
  String masterStormcodePath=StormConfig.stormcode_path(masterCodeDir);
  Utils.downloadFromMaster(conf,masterStormcodePath,localStormcodePath);
  String localStormConfPath=StormConfig.stormconf_path(localRoot);
  String masterStormConfPath=StormConfig.stormconf_path(masterCodeDir);
  Utils.downloadFromMaster(conf,masterStormConfPath,localStormConfPath);
  Map stormConf=(Map)StormConfig.readLocalObject(topologyId,localStormConfPath);
  if (stormConf == null)   throw new IOException("Get topology conf error: " + topologyId);
  List<String> libs=(List<String>)stormConf.get(GenericOptionsParser.TOPOLOGY_LIB_NAME);
  if (libs == null)   return;
  for (  String libName : libs) {
    String localStromLibPath=StormConfig.stormlib_path(localRoot,libName);
    String masterStormLibPath=StormConfig.stormlib_path(masterCodeDir,libName);
    Utils.downloadFromMaster(conf,masterStormLibPath,localStromLibPath);
  }
}
