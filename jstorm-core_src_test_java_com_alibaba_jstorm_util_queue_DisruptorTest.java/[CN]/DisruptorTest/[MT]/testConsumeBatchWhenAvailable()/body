{
  System.out.println("!!!!!!!!!!!!!!!Begin testConsumeBatchWhenAvailable!!!!!!!!!!!!");
  resetNum();
  DisruptorQueue queue=createQueue("messageOrder",ProducerType.MULTI,128);
  push(queue,128);
  queue.consumeBatchWhenAvailable(handler);
  Assert.assertEquals("produce: " + produceNum.get() + ", consume:"+ consumerNum.get(),produceNum.get(),consumerNum.get());
  System.out.println("!!!!!! finish testConsumeBatchWhenAvailable test 1");
  resetNum();
  push(queue,128);
  queue.consumeBatchWhenAvailable(handler);
  Assert.assertEquals("produce: " + produceNum.get() + ", consume:"+ consumerNum.get(),produceNum.get(),consumerNum.get());
  System.out.println("!!!!!! finish testConsumeBatchWhenAvailable test 2");
  System.out.println("!!!!!!!!!!!!!!!Finsh testConsumeBatchWhenAvailable for MULTI!!!!!!!!!!!!");
  resetNum();
  DisruptorQueue queue2=createQueue("messageOrder",ProducerType.SINGLE,128);
  push(queue2,128);
  queue2.consumeBatchWhenAvailable(handler);
  Assert.assertEquals("produce: " + produceNum.get() + ", consume:"+ consumerNum.get(),produceNum.get(),consumerNum.get());
  System.out.println("!!!!!! finish testConsumeBatchWhenAvailable test 3");
  resetNum();
  push(queue2,128);
  queue2.consumeBatchWhenAvailable(handler);
  Assert.assertEquals("produce: " + produceNum.get() + ", consume:"+ consumerNum.get(),produceNum.get(),consumerNum.get());
  System.out.println("!!!!!! finish testConsumeBatchWhenAvailable test 4");
  System.out.println("!!!!!!!!!!!!!!!Finsh testConsumeBatchWhenAvailable for single !!!!!!!!!!!!");
  System.out.println("!!!!!!!!!!!!!End testConsumeBatchWhenAvailable!!!!!!!!!!!");
}
