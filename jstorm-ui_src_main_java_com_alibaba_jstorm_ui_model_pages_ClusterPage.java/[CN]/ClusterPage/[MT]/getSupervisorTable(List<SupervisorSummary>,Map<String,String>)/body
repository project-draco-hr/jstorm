{
  TableData table=new TableData();
  List<String> headers=table.getHeaders();
  List<Map<String,ColumnData>> lines=table.getLines();
  table.setName(UIDef.SUPERVISOR.toUpperCase());
  headers.add(UIDef.HOST.toUpperCase());
  headers.add(UIDef.HEADER_UPTIME);
  headers.add(UIDef.HEADER_TOTAL_PORT);
  headers.add(UIDef.HEADER_USED_PORT);
  if (supervisorSummaries == null) {
    return table;
  }
  long pos=JStormUtils.parseLong(paramMap.get(UIDef.POS),0);
  for (long index=pos; index < supervisorSummaries.size() && index < pos + UIUtils.ONE_TABLE_PAGE_SIZE; index++) {
    SupervisorSummary supervisorSummary=supervisorSummaries.get((int)index);
    Map<String,ColumnData> line=new HashMap<String,ColumnData>();
    lines.add(line);
    ColumnData hostColumn=new ColumnData();
    LinkData linkData=new LinkData();
    hostColumn.addLinkData(linkData);
    line.put(UIDef.HOST.toUpperCase(),hostColumn);
    linkData.setUrl(UIDef.LINK_TABLE_PAGE);
    String ip=supervisorSummary.get_host();
    linkData.setText(NetWorkUtils.ip2Host(ip));
    linkData.addParam(UIDef.CLUSTER,paramMap.get(UIDef.CLUSTER));
    linkData.addParam(UIDef.PAGE_TYPE,UIDef.PAGE_TYPE_SUPERVISOR);
    linkData.addParam(UIDef.HOST,ip);
    ColumnData uptimeColumn=new ColumnData();
    int uptime=supervisorSummary.get_uptime_secs();
    uptimeColumn.addText(StatBuckets.prettyUptimeStr(uptime));
    line.put(UIDef.HEADER_UPTIME,uptimeColumn);
    ColumnData totalPortColumn=new ColumnData();
    totalPortColumn.addText(String.valueOf(supervisorSummary.get_num_workers()));
    line.put(UIDef.HEADER_TOTAL_PORT,totalPortColumn);
    ColumnData usedPortColumn=new ColumnData();
    usedPortColumn.addText(String.valueOf(supervisorSummary.get_num_used_workers()));
    line.put(UIDef.HEADER_USED_PORT,usedPortColumn);
  }
  return table;
}
