{
  List<TableData> tables=new ArrayList<TableData>();
  NimbusClient client=null;
  try {
    client=NimbusClientManager.getNimbusClient(paramMap);
    String jsonConf=client.getClient().getNimbusConf();
    Map<String,Object> nimbusConf=(Map<String,Object>)Utils.from_json(jsonConf);
    String host=paramMap.get(UIDef.HOST);
    if (StringUtils.isBlank(host)) {
      throw new IllegalArgumentException("Invalid parameter of host ");
    }
    SupervisorWorkers supervisorWorkers=client.getClient().getSupervisorWorkers(host);
    TableData supervisorTable=getSupervisorTable(supervisorWorkers.get_supervisor(),paramMap,nimbusConf);
    tables.add(supervisorTable);
    TableData workerTable=getWokerTable(supervisorWorkers,paramMap,nimbusConf);
    tables.add(workerTable);
    List<TableData> metricsTables=getMetricsTable(supervisorWorkers,paramMap,nimbusConf);
    if (metricsTables != null) {
      tables.addAll(metricsTables);
    }
    Output ret=new Output();
    ret.tables=tables;
    ret.rawData="";
    return ret;
  }
 catch (  Exception e) {
    NimbusClientManager.removeClient(paramMap);
    LOG.error(e.getMessage(),e);
    return UIUtils.getErrorInfo(e);
  }
}
