{
  super();
  String dbCacheClass=getNimbusCacheClass(conf);
  LOG.info("NimbusCache db Cache will use {}",dbCacheClass);
  try {
    dbCache=(JStormCache)Utils.newInstance(dbCacheClass);
    String dbDir=StormConfig.masterDbDir(conf);
    conf.put(RocksDBCache.ROCKSDB_ROOT_DIR,dbDir);
    conf.put(RocksDBCache.ROCKSDB_RESET,ConfigExtension.getNimbusCacheReset(conf));
    dbCache.init(conf);
    if (dbCache instanceof TimeoutMemCache) {
      memCache=dbCache;
    }
 else {
      memCache=new TimeoutMemCache();
      memCache.init(conf);
    }
  }
 catch (  java.lang.UnsupportedClassVersionError e) {
    if (e.getMessage().indexOf("Unsupported major.minor version") >= 0) {
      LOG.error("!!!Please update jdk version to 7 or higher!!!");
    }
    LOG.error("Failed to create NimbusCache!",e);
    throw new RuntimeException(e);
  }
catch (  Exception e) {
    LOG.error("Failed to create NimbusCache!",e);
    throw new RuntimeException(e);
  }
  this.zkCluster=zkCluster;
}
