def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('MetricInfo')
    if (self.metrics is not None):
        oprot.writeFieldBegin('metrics', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.MAP, len(self.metrics))
        for (kiter124, viter125) in self.metrics.items():
            oprot.writeString(kiter124.encode('utf-8'))
            oprot.writeMapBegin(TType.I32, TType.STRUCT, len(viter125))
            for (kiter126, viter127) in viter125.items():
                oprot.writeI32(kiter126)
                viter127.write(oprot)
            oprot.writeMapEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
