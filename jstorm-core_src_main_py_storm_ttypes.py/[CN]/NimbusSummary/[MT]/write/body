def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('NimbusSummary')
    if (self.nimbus_master is not None):
        oprot.writeFieldBegin('nimbus_master', TType.STRUCT, 1)
        self.nimbus_master.write(oprot)
        oprot.writeFieldEnd()
    if (self.nimbus_slaves is not None):
        oprot.writeFieldBegin('nimbus_slaves', TType.LIST, 2)
        oprot.writeListBegin(TType.STRUCT, len(self.nimbus_slaves))
        for iter72 in self.nimbus_slaves:
            iter72.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.supervisor_num is not None):
        oprot.writeFieldBegin('supervisor_num', TType.I32, 3)
        oprot.writeI32(self.supervisor_num)
        oprot.writeFieldEnd()
    if (self.total_port_num is not None):
        oprot.writeFieldBegin('total_port_num', TType.I32, 4)
        oprot.writeI32(self.total_port_num)
        oprot.writeFieldEnd()
    if (self.used_port_num is not None):
        oprot.writeFieldBegin('used_port_num', TType.I32, 5)
        oprot.writeI32(self.used_port_num)
        oprot.writeFieldEnd()
    if (self.free_port_num is not None):
        oprot.writeFieldBegin('free_port_num', TType.I32, 6)
        oprot.writeI32(self.free_port_num)
        oprot.writeFieldEnd()
    if (self.version is not None):
        oprot.writeFieldBegin('version', TType.STRING, 7)
        oprot.writeString(self.version.encode('utf-8'))
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
