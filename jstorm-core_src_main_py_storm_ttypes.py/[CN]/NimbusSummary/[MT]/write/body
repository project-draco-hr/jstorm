def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('NimbusSummary')
    if (self.nimbusMaster is not None):
        oprot.writeFieldBegin('nimbusMaster', TType.STRUCT, 1)
        self.nimbusMaster.write(oprot)
        oprot.writeFieldEnd()
    if (self.nimbusSlaves is not None):
        oprot.writeFieldBegin('nimbusSlaves', TType.LIST, 2)
        oprot.writeListBegin(TType.STRUCT, len(self.nimbusSlaves))
        for iter72 in self.nimbusSlaves:
            iter72.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.supervisorNum is not None):
        oprot.writeFieldBegin('supervisorNum', TType.I32, 3)
        oprot.writeI32(self.supervisorNum)
        oprot.writeFieldEnd()
    if (self.totalPortNum is not None):
        oprot.writeFieldBegin('totalPortNum', TType.I32, 4)
        oprot.writeI32(self.totalPortNum)
        oprot.writeFieldEnd()
    if (self.usedPortNum is not None):
        oprot.writeFieldBegin('usedPortNum', TType.I32, 5)
        oprot.writeI32(self.usedPortNum)
        oprot.writeFieldEnd()
    if (self.freePortNum is not None):
        oprot.writeFieldBegin('freePortNum', TType.I32, 6)
        oprot.writeI32(self.freePortNum)
        oprot.writeFieldEnd()
    if (self.version is not None):
        oprot.writeFieldBegin('version', TType.STRING, 7)
        oprot.writeString(self.version.encode('utf-8'))
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
