def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('MetricWindow')
    if (self.metricWindow is not None):
        oprot.writeFieldBegin('metricWindow', TType.MAP, 1)
        oprot.writeMapBegin(TType.I32, TType.DOUBLE, len(self.metricWindow))
        for (kiter101, viter102) in self.metricWindow.items():
            oprot.writeI32(kiter101)
            oprot.writeDouble(viter102)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
