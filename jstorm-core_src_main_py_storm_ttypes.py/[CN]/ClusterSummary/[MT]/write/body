def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ClusterSummary')
    if (self.nimbus is not None):
        oprot.writeFieldBegin('nimbus', TType.STRUCT, 1)
        self.nimbus.write(oprot)
        oprot.writeFieldEnd()
    if (self.supervisors is not None):
        oprot.writeFieldBegin('supervisors', TType.LIST, 2)
        oprot.writeListBegin(TType.STRUCT, len(self.supervisors))
        for iter85 in self.supervisors:
            iter85.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.topologies is not None):
        oprot.writeFieldBegin('topologies', TType.LIST, 3)
        oprot.writeListBegin(TType.STRUCT, len(self.topologies))
        for iter86 in self.topologies:
            iter86.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
