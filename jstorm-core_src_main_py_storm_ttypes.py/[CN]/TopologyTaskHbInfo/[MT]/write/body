def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TopologyTaskHbInfo')
    if (self.topologyId is not None):
        oprot.writeFieldBegin('topologyId', TType.STRING, 1)
        oprot.writeString(self.topologyId.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.topologyMasterId is not None):
        oprot.writeFieldBegin('topologyMasterId', TType.I32, 2)
        oprot.writeI32(self.topologyMasterId)
        oprot.writeFieldEnd()
    if (self.taskHbs is not None):
        oprot.writeFieldBegin('taskHbs', TType.MAP, 3)
        oprot.writeMapBegin(TType.I32, TType.STRUCT, len(self.taskHbs))
        for (kiter204, viter205) in self.taskHbs.items():
            oprot.writeI32(kiter204)
            viter205.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
