def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ComponentSummary')
    if (self.name is not None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.parallel is not None):
        oprot.writeFieldBegin('parallel', TType.I32, 2)
        oprot.writeI32(self.parallel)
        oprot.writeFieldEnd()
    if (self.type is not None):
        oprot.writeFieldBegin('type', TType.STRING, 3)
        oprot.writeString(self.type.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.task_ids is not None):
        oprot.writeFieldBegin('task_ids', TType.LIST, 4)
        oprot.writeListBegin(TType.I32, len(self.task_ids))
        for iter203 in self.task_ids:
            oprot.writeI32(iter203)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.errors is not None):
        oprot.writeFieldBegin('errors', TType.LIST, 5)
        oprot.writeListBegin(TType.STRUCT, len(self.errors))
        for iter204 in self.errors:
            iter204.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
