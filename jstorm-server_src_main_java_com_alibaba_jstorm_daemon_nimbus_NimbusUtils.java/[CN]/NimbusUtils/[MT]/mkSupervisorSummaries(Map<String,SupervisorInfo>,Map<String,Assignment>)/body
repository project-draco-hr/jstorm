{
  Map<String,Integer> supervisorToLeftSlotNum=new HashMap<String,Integer>();
  for (  Entry<String,Assignment> entry : assignments.entrySet()) {
    Set<ResourceWorkerSlot> workers=entry.getValue().getWorkers();
    for (    ResourceWorkerSlot worker : workers) {
      String supervisorId=worker.getNodeId();
      SupervisorInfo supervisorInfo=supervisorInfos.get(supervisorId);
      if (supervisorInfo == null) {
        continue;
      }
      Integer slots=supervisorToLeftSlotNum.get(supervisorId);
      if (slots == null) {
        slots=0;
        supervisorToLeftSlotNum.put(supervisorId,slots);
      }
      supervisorToLeftSlotNum.put(supervisorId,++slots);
    }
  }
  List<SupervisorSummary> ret=new ArrayList<SupervisorSummary>();
  for (  Entry<String,SupervisorInfo> entry : supervisorInfos.entrySet()) {
    String supervisorId=entry.getKey();
    SupervisorInfo supervisorInfo=entry.getValue();
    SupervisorSummary summary=mkSupervisorSummary(supervisorInfo,supervisorId,supervisorToLeftSlotNum);
    ret.add(summary);
  }
  Collections.sort(ret,new Comparator<SupervisorSummary>(){
    @Override public int compare(    SupervisorSummary o1,    SupervisorSummary o2){
      return o1.get_host().compareTo(o2.get_host());
    }
  }
);
  return ret;
}
