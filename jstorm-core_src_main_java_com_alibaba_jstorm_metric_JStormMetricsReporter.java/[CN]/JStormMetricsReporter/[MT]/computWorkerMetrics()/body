{
  MetricInfo workerMetricInfo=MetricThrift.mkMetricInfo();
  Map<String,MetricInfo> nettyMetricInfo=new HashMap<String,MetricInfo>();
  Map<String,List<Map<Integer,Double>>> mergeMap=new HashMap<String,List<Map<Integer,Double>>>();
  List<String> mergeList=new ArrayList<String>();
  mergeList.add(MetricDef.NETTY_CLI_SEND_SPEED);
  Map<String,Metric> workerMetricMap=workerMetrics.getMetrics();
  for (  Entry<String,Metric> entry : workerMetricMap.entrySet()) {
    String name=entry.getKey();
    Map<Integer,Double> snapshot=entry.getValue().getSnapshot();
    if (MetricDef.isNettyDetails(name) == false) {
      MetricThrift.insert(workerMetricInfo,name,snapshot);
      continue;
    }
    insertNettyMetrics(nettyMetricInfo,snapshot,name);
    insertMergeList(mergeMap,mergeList,snapshot,name);
  }
  doMergeList(workerMetricInfo,mergeMap);
  JStormMetrics.setExposeWorkerMetrics(workerMetricInfo);
  JStormMetrics.setExposeNettyMetrics(nettyMetricInfo);
  return workerMetricInfo;
}
