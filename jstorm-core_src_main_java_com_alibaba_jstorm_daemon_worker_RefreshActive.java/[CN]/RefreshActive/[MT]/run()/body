{
  try {
    StatusType newTopologyStatus=StatusType.activate;
    StormBase base=zkCluster.storm_base(topologyId,this);
    if (base == null) {
      LOG.warn("Failed to get StromBase from ZK of " + topologyId);
      newTopologyStatus=StatusType.killed;
    }
 else {
      newTopologyStatus=base.getStatus().getStatusType();
    }
    StatusType oldTopologyStatus=workerData.getTopologyStatus();
    if (newTopologyStatus.equals(oldTopologyStatus)) {
      return;
    }
    LOG.info("Old TopologyStatus:" + oldTopologyStatus + ", new TopologyStatus:"+ newTopologyStatus);
    List<TaskShutdownDameon> tasks=workerData.getShutdownTasks();
    if (tasks == null) {
      LOG.info("Tasks aren't ready or begin to shutdown");
      return;
    }
    if (newTopologyStatus.equals(StatusType.active)) {
      for (      TaskShutdownDameon task : tasks) {
        task.active();
      }
    }
 else     if (newTopologyStatus.equals(StatusType.rebalancing)) {
      for (      TaskShutdownDameon task : tasks) {
        task.deactive();
      }
    }
 else {
      for (      TaskShutdownDameon task : tasks) {
        task.deactive();
      }
    }
    workerData.setTopologyStatus(newTopologyStatus);
    boolean newMonitorEnable=base.isEnableMonitor();
    boolean oldMonitorEnable=monitorEnable.get();
    if (newMonitorEnable != oldMonitorEnable) {
      LOG.info("Change MonitorEnable from " + oldMonitorEnable + " to "+ newMonitorEnable);
      monitorEnable.set(newMonitorEnable);
    }
  }
 catch (  Exception e) {
    LOG.error("Failed to get topology from ZK ",e);
    return;
  }
}
