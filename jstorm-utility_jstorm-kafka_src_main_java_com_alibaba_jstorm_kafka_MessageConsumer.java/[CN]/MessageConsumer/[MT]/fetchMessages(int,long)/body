{
  String topic=config.topic;
  FetchRequest req=new FetchRequestBuilder().clientId(config.clientId).addFetch(topic,partition,offset,config.fetchMaxBytes).maxWait(config.fetchWaitMaxMs).build();
  FetchResponse fetchResponse=null;
  try {
    fetchResponse=consumer.fetch(req);
  }
 catch (  Exception e) {
    if (e instanceof ConnectException || e instanceof SocketTimeoutException || e instanceof IOException|| e instanceof UnresolvedAddressException) {
      LOG.warn("Network error when fetching messages:",e);
      throw new KafkaException("Network error when fetching messages: " + e.getMessage());
    }
 else {
      throw new RuntimeException(e);
    }
  }
  if (fetchResponse.hasError()) {
    short code=fetchResponse.errorCode(topic,partition);
    throw new KafkaException("fetch data from kafka topic[" + topic + "] partition["+ partition+ "] error:"+ code);
  }
 else {
    ByteBufferMessageSet msgs=fetchResponse.messageSet(topic,partition);
    return msgs;
  }
}
