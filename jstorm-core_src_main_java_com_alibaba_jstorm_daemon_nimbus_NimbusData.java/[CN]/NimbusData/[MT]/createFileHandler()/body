{
  TimeCacheMap.ExpiredCallback<Object,Object> expiredCallback=new TimeCacheMap.ExpiredCallback<Object,Object>(){
    @Override public void expire(    Object key,    Object val){
      try {
        LOG.info("Close file " + String.valueOf(key));
        if (val != null) {
          if (val instanceof Channel) {
            Channel channel=(Channel)val;
            channel.close();
          }
 else           if (val instanceof BufferFileInputStream) {
            BufferFileInputStream is=(BufferFileInputStream)val;
            is.close();
          }
        }
      }
 catch (      IOException e) {
        LOG.error(e.getMessage(),e);
      }
    }
  }
;
  int file_copy_expiration_secs=JStormUtils.parseInt(conf.get(Config.NIMBUS_FILE_COPY_EXPIRATION_SECS),30);
  uploaders=new TimeCacheMap<Object,Object>(file_copy_expiration_secs,expiredCallback);
  downloaders=new TimeCacheMap<Object,Object>(file_copy_expiration_secs,expiredCallback);
}
