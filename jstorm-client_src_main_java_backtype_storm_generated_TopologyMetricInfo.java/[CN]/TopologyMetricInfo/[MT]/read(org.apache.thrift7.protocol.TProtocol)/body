{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.STRING) {
        this.topology_id=iprot.readString();
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.LIST) {
{
      org.apache.thrift7.protocol.TList _list259=iprot.readListBegin();
      this.task_metric_list=new ArrayList<TaskMetricData>(_list259.size);
      for (int _i260=0; _i260 < _list259.size; ++_i260) {
        TaskMetricData _elem261;
        _elem261=new TaskMetricData();
        _elem261.read(iprot);
        this.task_metric_list.add(_elem261);
      }
      iprot.readListEnd();
    }
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.LIST) {
{
  org.apache.thrift7.protocol.TList _list262=iprot.readListBegin();
  this.worker_metric_list=new ArrayList<WorkerMetricData>(_list262.size);
  for (int _i263=0; _i263 < _list262.size; ++_i263) {
    WorkerMetricData _elem264;
    _elem264=new WorkerMetricData();
    _elem264.read(iprot);
    this.worker_metric_list.add(_elem264);
  }
  iprot.readListEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
