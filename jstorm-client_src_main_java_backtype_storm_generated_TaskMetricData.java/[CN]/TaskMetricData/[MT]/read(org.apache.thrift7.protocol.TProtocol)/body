{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.I32) {
        this.task_id=iprot.readI32();
        set_task_id_isSet(true);
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.STRING) {
    this.component_id=iprot.readString();
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
  org.apache.thrift7.protocol.TMap _map205=iprot.readMapBegin();
  this.gauge=new HashMap<String,Double>(2 * _map205.size);
  for (int _i206=0; _i206 < _map205.size; ++_i206) {
    String _key207;
    double _val208;
    _key207=iprot.readString();
    _val208=iprot.readDouble();
    this.gauge.put(_key207,_val208);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
org.apache.thrift7.protocol.TMap _map209=iprot.readMapBegin();
this.counter=new HashMap<String,Double>(2 * _map209.size);
for (int _i210=0; _i210 < _map209.size; ++_i210) {
String _key211;
double _val212;
_key211=iprot.readString();
_val212=iprot.readDouble();
this.counter.put(_key211,_val212);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
org.apache.thrift7.protocol.TMap _map213=iprot.readMapBegin();
this.meter=new HashMap<String,Double>(2 * _map213.size);
for (int _i214=0; _i214 < _map213.size; ++_i214) {
String _key215;
double _val216;
_key215=iprot.readString();
_val216=iprot.readDouble();
this.meter.put(_key215,_val216);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 6:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
org.apache.thrift7.protocol.TMap _map217=iprot.readMapBegin();
this.timer=new HashMap<String,Double>(2 * _map217.size);
for (int _i218=0; _i218 < _map217.size; ++_i218) {
String _key219;
double _val220;
_key219=iprot.readString();
_val220=iprot.readDouble();
this.timer.put(_key219,_val220);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 7:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
org.apache.thrift7.protocol.TMap _map221=iprot.readMapBegin();
this.histogram=new HashMap<String,Double>(2 * _map221.size);
for (int _i222=0; _i222 < _map221.size; ++_i222) {
String _key223;
double _val224;
_key223=iprot.readString();
_val224=iprot.readDouble();
this.histogram.put(_key223,_val224);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
