{
  Set<Integer> assigned=new HashSet<Integer>();
  List<ResourceWorkerSlot> users=new ArrayList<ResourceWorkerSlot>();
  if (workers == null)   return;
  for (  ResourceWorkerSlot worker : workers) {
    boolean right=true;
    Set<Integer> tasks=worker.getTasks();
    if (tasks == null)     continue;
    for (    Integer task : tasks) {
      if (!needAssign.contains(task) || assigned.contains(task)) {
        right=false;
        break;
      }
    }
    if (right) {
      assigned.addAll(tasks);
      users.add(worker);
    }
  }
  if (users.size() + assignedWorkers.size() > workersNum) {
    LOG.warn("There are no enough workers for user define scheduler / keeping old assignment, userdefineWorkers={}, assignedWorkers={}, workerNum={}",users,assignedWorkers,workersNum);
    return;
  }
  assignedWorkers.addAll(users);
  needAssign.removeAll(assigned);
}
