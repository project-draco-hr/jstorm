{
  String stormroot=StormConfig.supervisor_stormdist_root(conf,topologyId);
  String stormjar=StormConfig.stormjar_path(stormroot);
  Map stormConf=StormConfig.read_supervisor_topology_conf(conf,topologyId);
  Map totalConf=new HashMap();
  totalConf.putAll(conf);
  totalConf.putAll(stormConf);
  String stormhome=System.getProperty("jstorm.home");
  long memSlotSize=ConfigExtension.getMemSlotSize(totalConf);
  long memSize=memSlotSize * assignment.getMemSlotNum();
  int cpuNum=assignment.getCpuSlotNum();
  String childopts=getChildOpts(totalConf);
  childopts+=getGcDumpParam(totalConf);
  childopts=childopts.replace("%ID%",port.toString());
  childopts=childopts.replace("%TOPOLOGYID%",topologyId);
  if (stormhome != null) {
    childopts=childopts.replace("%JSTORM_HOME%",stormhome);
  }
 else {
    childopts=childopts.replace("%JSTORM_HOME%","./");
  }
  Map<String,String> environment=new HashMap<String,String>();
  if (ConfigExtension.getWorkerRedirectOutput(totalConf)) {
    environment.put("REDIRECT","true");
  }
 else {
    environment.put("REDIRECT","false");
  }
  String logFileName=topologyId + "-worker-" + port+ ".log";
  environment.put("LD_LIBRARY_PATH",(String)totalConf.get(Config.JAVA_LIBRARY_PATH));
  StringBuilder commandSB=new StringBuilder();
  try {
    if (this.cgroupManager != null) {
      commandSB.append(cgroupManager.startNewWorker(cpuNum,workerId));
    }
  }
 catch (  Exception e) {
    LOG.error("fail to prepare cgroup to workerId: " + workerId,e);
    return;
  }
  commandSB.append("java -server ");
  commandSB.append(" -Xms" + memSize);
  commandSB.append(" -Xmx" + memSize + " ");
  commandSB.append(" -Xmn" + memSize / 3 + " ");
  commandSB.append(" -XX:PermSize=" + memSize / 16);
  commandSB.append(" -XX:MaxPermSize=" + memSize / 8);
  commandSB.append(childopts);
  commandSB.append(" -Djava.library.path=");
  commandSB.append((String)totalConf.get(Config.JAVA_LIBRARY_PATH));
  commandSB.append(" -Dlogfile.name=");
  commandSB.append(logFileName);
  if (stormhome != null) {
    commandSB.append(" -Dlog4j.configuration=File:" + stormhome + "/conf/jstorm.log4j.properties");
    commandSB.append(" -Djstorm.home=");
    commandSB.append(stormhome);
  }
 else {
    commandSB.append(" -Dlog4j.configuration=File:jstorm.log4j.properties");
  }
  String classpath=getClassPath(stormjar,stormhome,totalConf);
  String workerClassPath=(String)totalConf.get(Config.WORKER_CLASSPATH);
  commandSB.append(" -cp ");
  commandSB.append(classpath);
  if (!ConfigExtension.isEnableTopologyClassLoader(totalConf))   commandSB.append(":").append(workerClassPath);
  commandSB.append(" com.alibaba.jstorm.daemon.worker.Worker ");
  commandSB.append(topologyId);
  commandSB.append(" ");
  commandSB.append(supervisorId);
  commandSB.append(" ");
  commandSB.append(port);
  commandSB.append(" ");
  commandSB.append(workerId);
  commandSB.append(" ");
  commandSB.append(workerClassPath + ":" + stormjar);
  LOG.info("Launching worker with command: " + commandSB);
  LOG.info("Environment:" + environment.toString());
  JStormUtils.launch_process(commandSB.toString(),environment);
}
