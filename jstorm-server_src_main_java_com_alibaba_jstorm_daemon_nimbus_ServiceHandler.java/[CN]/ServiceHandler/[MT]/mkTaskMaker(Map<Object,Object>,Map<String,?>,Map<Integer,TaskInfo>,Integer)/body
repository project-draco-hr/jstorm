{
  if (cidSpec == null) {
    LOG.warn("Component map is empty");
    return cnt;
  }
  Set<?> entrySet=cidSpec.entrySet();
  for (Iterator<?> it=entrySet.iterator(); it.hasNext(); ) {
    Entry entry=(Entry)it.next();
    Object obj=entry.getValue();
    ComponentCommon common=null;
    String componentType="bolt";
    if (obj instanceof Bolt) {
      common=((Bolt)obj).get_common();
      componentType="bolt";
    }
 else     if (obj instanceof SpoutSpec) {
      common=((SpoutSpec)obj).get_common();
      componentType="spout";
    }
 else     if (obj instanceof StateSpoutSpec) {
      common=((StateSpoutSpec)obj).get_common();
      componentType="spout";
    }
    if (common == null) {
      throw new RuntimeException("No ComponentCommon of " + entry.getKey());
    }
    int declared=Thrift.parallelismHint(common);
    Integer parallelism=declared;
    Map newStormConf=new HashMap(stormConf);
    Integer maxParallelism=JStormUtils.parseInt(newStormConf.get(Config.TOPOLOGY_MAX_TASK_PARALLELISM));
    if (maxParallelism != null) {
      parallelism=Math.min(maxParallelism,declared);
    }
    for (int i=0; i < parallelism; i++) {
      cnt++;
      TaskInfo taskInfo=new TaskInfo((String)entry.getKey(),componentType);
      rtn.put(cnt,taskInfo);
    }
  }
  return cnt;
}
