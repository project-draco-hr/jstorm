{
  try {
    List<String> topologys=cluster.active_storms();
    for (    String topologyId : topologys) {
      StormMonitor monitor=null;
      boolean metricPerf=true;
      Assignment assignment=null;
      try {
        monitor=cluster.get_storm_monitor(topologyId);
        if (monitor != null)         metricPerf=monitor.getMetrics();
        assignment=cluster.assignment_info(topologyId,null);
      }
 catch (      Exception e) {
        LOG.error("Error when retrieving monitor status and assignment info " + "for " + topologyId,e);
        continue;
      }
      if (assignment != null) {
        Set<Integer> taskSet=new HashSet<Integer>();
        Set<Integer> workerSet=new HashSet<Integer>();
        Set<Integer> tempTaskSet=assignment.getCurrentSuperviosrTasks(supervisorId);
        taskSet.addAll(tempTaskSet);
        Set<Integer> tempWorkerSet=assignment.getCurrentSuperviosrWorkers(supervisorId);
        workerSet.addAll(tempWorkerSet);
        buildTaskJsonMsg(topologyId,taskSet,metricPerf);
        buildWorkerJsonMsg(topologyId,workerSet,metricPerf);
      }
    }
    if (jsonMsgTasks.size() != 0) {
      if (client instanceof AlimonitorClient) {
        ((AlimonitorClient)client).setMonitorName(ConfigExtension.getAlmonTaskMetricName(conf));
        ((AlimonitorClient)client).setCollectionFlag(0);
        ((AlimonitorClient)client).setErrorInfo("");
      }
      client.send(jsonMsgTasks);
    }
    if (jsonMsgWorkers.size() != 0) {
      if (client instanceof AlimonitorClient) {
        ((AlimonitorClient)client).setMonitorName(ConfigExtension.getAlmonWorkerMetricName(conf));
        ((AlimonitorClient)client).setCollectionFlag(0);
        ((AlimonitorClient)client).setErrorInfo("");
      }
      client.send(jsonMsgWorkers);
    }
    jsonMsgTasks.clear();
    jsonMsgWorkers.clear();
  }
 catch (  Exception e) {
    LOG.error("Failed to upload worker&task metrics data",e);
    jsonMsgTasks.clear();
    jsonMsgWorkers.clear();
  }
}
