{
  Set<String> topologies=new HashSet<>();
  for (  Map.Entry<Integer,LocalAssignment> entry : localAssignments.entrySet()) {
    topologies.add(entry.getValue().getTopologyId());
  }
  for (  StateHeartbeat stateHb : localWorkerStats.values()) {
    State state=stateHb.getState();
    if (!state.equals(State.notStarted)) {
      String topologyId=stateHb.getHeartbeat().getTopologyId();
      topologies.remove(topologyId);
    }
  }
  long currTime=System.currentTimeMillis();
  Set<String> needRemoveTopologies=new HashSet<>();
  for (  String topologyId : topologies) {
    try {
      long lastModifytime=StormConfig.get_supervisor_topology_Bianrymodify_time(conf,topologyId);
      if ((currTime - lastModifytime) / 1000 < (JStormUtils.MIN_1 * 2)) {
        LOG.debug("less 2 minite ,so removed " + topologyId);
        needRemoveTopologies.add(topologyId);
      }
    }
 catch (    Exception e) {
      LOG.error("Failed to get the time of file last modification for topology" + topologyId,e);
      needRemoveTopologies.add(topologyId);
    }
  }
  topologies.removeAll(needRemoveTopologies);
  if (topologies.size() > 0) {
    LOG.debug("Following topologies are going to re-download the jars, " + topologies);
  }
  needDownloadTopologys.set(topologies);
}
