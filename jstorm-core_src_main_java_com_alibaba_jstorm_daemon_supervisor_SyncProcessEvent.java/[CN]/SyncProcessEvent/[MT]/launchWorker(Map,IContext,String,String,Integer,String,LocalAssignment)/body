{
  Map stormConf=StormConfig.read_supervisor_topology_conf(conf,topologyId);
  String stormHome=System.getProperty("jstorm.home");
  if (StringUtils.isBlank(stormHome)) {
    stormHome="./";
  }
  Map totalConf=new HashMap();
  totalConf.putAll(conf);
  totalConf.putAll(stormConf);
  Map<String,String> environment=new HashMap<String,String>();
  if (ConfigExtension.getWorkerRedirectOutput(totalConf)) {
    environment.put("REDIRECT","true");
  }
 else {
    environment.put("REDIRECT","false");
  }
  environment.put("LD_LIBRARY_PATH",(String)totalConf.get(Config.JAVA_LIBRARY_PATH));
  environment.put("jstorm.home",stormHome);
  environment.put("jstorm.workerId",workerId);
  String launcherCmd=getLauncherParameter(assignment,totalConf,stormHome,topologyId,port);
  String workerCmd=getWorkerParameter(assignment,totalConf,stormHome,topologyId,supervisorId,workerId,port);
  String cmd=launcherCmd + " " + workerCmd;
  cmd=cmd.replace("%JSTORM_HOME%",stormHome);
  LOG.info("Launching worker with command: " + cmd);
  LOG.info("Environment:" + environment.toString());
  JStormUtils.launchProcess(cmd,environment,true);
}
