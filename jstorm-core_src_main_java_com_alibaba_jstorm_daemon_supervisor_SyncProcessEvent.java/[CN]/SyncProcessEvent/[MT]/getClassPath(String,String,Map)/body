{
  String classpath=JStormUtils.current_classpath();
  String[] classpathes=classpath.split(":");
  Set<String> classSet=new HashSet<String>();
  for (  String classJar : classpathes) {
    if (StringUtils.isBlank(classJar) == true) {
      continue;
    }
    classSet.add(classJar);
  }
  if (stormHome != null) {
    List<String> stormHomeFiles=PathUtils.read_dir_contents(stormHome);
    for (    String file : stormHomeFiles) {
      if (file.endsWith(".jar")) {
        classSet.add(stormHome + File.separator + file);
      }
    }
    List<String> stormLibFiles=PathUtils.read_dir_contents(stormHome + File.separator + "lib");
    for (    String file : stormLibFiles) {
      if (file.endsWith(".jar")) {
        classSet.add(stormHome + File.separator + "lib"+ File.separator+ file);
      }
    }
  }
  Set<String> filterJars=setFilterJars(totalConf);
  StringBuilder sb=new StringBuilder();
  for (  String jar : classSet) {
    if (isKeyContain(filterJars,jar)) {
      LOG.info("Remove " + jar);
      continue;
    }
    sb.append(jar + ":");
  }
  if (ConfigExtension.isEnableTopologyClassLoader(totalConf)) {
    return sb.toString().substring(0,sb.length() - 1);
  }
 else {
    sb.append(stormjar);
    return sb.toString();
  }
}
