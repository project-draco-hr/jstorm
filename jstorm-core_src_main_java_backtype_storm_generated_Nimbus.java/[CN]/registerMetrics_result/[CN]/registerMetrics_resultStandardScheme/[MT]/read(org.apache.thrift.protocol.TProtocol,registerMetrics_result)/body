{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 0:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map232=iprot.readMapBegin();
          struct.success=new HashMap<String,Long>(2 * _map232.size);
          String _key233;
          long _val234;
          for (int _i235=0; _i235 < _map232.size; ++_i235) {
            _key233=iprot.readString();
            _val234=iprot.readI64();
            struct.success.put(_key233,_val234);
          }
          iprot.readMapEnd();
        }
        struct.set_success_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
