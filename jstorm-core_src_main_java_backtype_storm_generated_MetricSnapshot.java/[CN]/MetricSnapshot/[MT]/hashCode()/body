{
  List<Object> list=new ArrayList<Object>();
  boolean present_metricId=true;
  list.add(present_metricId);
  if (present_metricId)   list.add(metricId);
  boolean present_ts=true;
  list.add(present_ts);
  if (present_ts)   list.add(ts);
  boolean present_metricType=true;
  list.add(present_metricType);
  if (present_metricType)   list.add(metricType);
  boolean present_longValue=true && (is_set_longValue());
  list.add(present_longValue);
  if (present_longValue)   list.add(longValue);
  boolean present_doubleValue=true && (is_set_doubleValue());
  list.add(present_doubleValue);
  if (present_doubleValue)   list.add(doubleValue);
  boolean present_m1=true && (is_set_m1());
  list.add(present_m1);
  if (present_m1)   list.add(m1);
  boolean present_m5=true && (is_set_m5());
  list.add(present_m5);
  if (present_m5)   list.add(m5);
  boolean present_m15=true && (is_set_m15());
  list.add(present_m15);
  if (present_m15)   list.add(m15);
  boolean present_mean=true && (is_set_mean());
  list.add(present_mean);
  if (present_mean)   list.add(mean);
  boolean present_min=true && (is_set_min());
  list.add(present_min);
  if (present_min)   list.add(min);
  boolean present_max=true && (is_set_max());
  list.add(present_max);
  if (present_max)   list.add(max);
  boolean present_p50=true && (is_set_p50());
  list.add(present_p50);
  if (present_p50)   list.add(p50);
  boolean present_p75=true && (is_set_p75());
  list.add(present_p75);
  if (present_p75)   list.add(p75);
  boolean present_p95=true && (is_set_p95());
  list.add(present_p95);
  if (present_p95)   list.add(p95);
  boolean present_p98=true && (is_set_p98());
  list.add(present_p98);
  if (present_p98)   list.add(p98);
  boolean present_p99=true && (is_set_p99());
  list.add(present_p99);
  if (present_p99)   list.add(p99);
  boolean present_p999=true && (is_set_p999());
  list.add(present_p999);
  if (present_p999)   list.add(p999);
  boolean present_stddev=true && (is_set_stddev());
  list.add(present_stddev);
  if (present_stddev)   list.add(stddev);
  boolean present_points=true && (is_set_points());
  list.add(present_points);
  if (present_points)   list.add(points);
  return list.hashCode();
}
